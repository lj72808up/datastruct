/** 问题描述:
 *  1. 这是一个被称做"蓄水池抽样"的经典问题, 问题主要描述为:
 *   有一个长度未知的数据流, 要从中抽取m个元素. 要求:
 *    a. 抽到的元素不能有重复的, 且每个元素被抽到的概率相等;
 *    b. 这个数据流的长度可能非常非常长(导致无法先将数据流全部缓存在内存内随机取角标)
 *
 *  2. leetCode的382题可采用该思路进行求解, 其描述如下:
 *    给定一个单链表，随机选择链表的一个节点，并返回相应的节点值。保证每个节点被选的概率一样。
 *    [注意]:该链表十分大且长度未知，如何解决这个问题？你能否使用常数级空间复杂度实现？
 *    https://leetcode-cn.com/problems/linked-list-random-node/
 * */
public class ReservoirSample_382 {
}


/** 思路: leetcode的题目是蓄水池抽样在m=1时的简化版本
 *  从leetcode的描述上可以知道, 链表非常长且长度未可知. 这意味着, 一般的对数组随机抽样的做法:
 *     " 把数组全部装进内存, 随机选择一个角标, 按照角标抽样数组元素" 的做法是不可取的.
 *   (1) 一个原因是因为元素个数太大无法一次性放入内存;
 *   (2) 另一个原因是leetcode中只要求抽样一个元素, 如果要求抽样多个元素, 有可能重复抽到一个元素;
 *
 *  蓄水池抽样的思路:
 *   (1) 先给出实现代码, 再给出每个元素抽样的概率相等的证明
 *     ```
 *     init: 初始化蓄水池arr, 大小m
 *     将数据流中的前m个元素插入到蓄水池arr中
 *     for i=m+1 to n{
 *         r = rand(1,i)
 *         if(r<m)
 *            arr(m) = dataFlow(i)
 *     }
 *     ```
 *    上述伪代码的意思为:
 *      先从数据流中选择1~m的元素, 作为被抽样到的元素;
 *      对后面m+1开始的元素做如下操作:
 *        这些元素都有m/i的概率被选中, 然后等概率的(1/m)替换掉被选中的元素; i为元素在数据流中的序号
 *
 *   (2) 概率证明
 *  https://www.jianshu.com/p/7a9ea6ece2af
 *
 * */